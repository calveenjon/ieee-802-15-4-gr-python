id: ieee_802_15_4_python_transmit_mux
label: Transmit Mux
category: '[IEEE 802.15.4 Python]'

templates:
  imports: from gnuradio import ieee_802_15_4_python
  make: ieee_802_15_4_python.transmit_mux()

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
# - id: parametername_replace_me
#   label: FIX ME:
#   dtype: string
#   default: You need to fill in your grc/ieee_802_15_4_python_transmit_mux.block.yaml
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in0
  domain: stream
  dtype: complex

- label: in1
  domain: stream
  dtype: complex

- label: tx_cmd
  domain: message
  dtype: byte
  optional: 1

outputs:
- label: out
  domain: stream
  dtype: complex

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
